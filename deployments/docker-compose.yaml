version: "3"
name: SortTheName
services:

# Балансировщик 
  nginx-balancer:
    image: nginx:alpine-slim
    restart: always
    volumes:
      - ../nginx/balancer/nginx.conf:/etc/nginx/nginx.conf
      - ./volumes/nginx/balancer:/var/log/nginx/
    ports:
      - 3000:80
    depends_on:
      - nginx-web

  TheNameService:
    build: 
      context: ../microservices/authentication
      dockerfile: ./build/Dockerfile
    volumes:
      - ./volumes/configs/server.yaml:/app/server.yaml
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}

      SENIOR_REFEREE_PIN: ${SENIOR_REFEREE_PIN}
      REFEREE_PIN: ${REFEREE_PIN}
      SERVER_PORT: 9999
      SERVER_HOST: 0.0.0.0
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: eurobot
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}      
      DB_SSL: disable

      PRIVATE_KEY: ${RS256_PRIVATE_KEY}
      PUBLIC_KEY: ${RS256_PUBLIC_KEY}
    
    depends_on: 
      alembic:
        condition: service_completed_successfully

  database:
    image: postgres:alpine
    restart: always
    volumes:
      - ./volumes/database/postgres-data:/var/lib/postgresql/data
      - ../migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: eurobot
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:      
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres "]
      interval: 5s
      timeout: 5s
      retries: 5


    